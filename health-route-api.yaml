openapi: 3.0.3
info:
  title: Health-Route
  description: Health-Route
  version: 1.0.0
servers:
  - url: 'localhost:8080/api/v1'
paths:
  /meals:
    get:
      tags:
        - Meals
      summary: Returns a list of all Meals
      responses:
        '200':
          description: A JSON array of meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
    post:
      tags:
        - Meals
      summary: Create a new Meal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request, failed to create Meal
  /meals/{mealId}:
    get:
      tags:
        - Meals
      summary: Get a meal by it's ID.
      parameters:
        - in: path
          name: mealId
          schema:
            type: integer
          required: true
          description: The Numeric ID of the meal being retrieved.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
  /meals/day/{mealId}:
    patch:
      tags:
        - Meals
      summary: Add meal to a Day.
      parameters:
        - in: path
          name: mealId
          schema:
            type: integer
          required: true
          description: The Numeric ID of a Meal.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Day'
      responses:
        200:
          description: Successfully added Meal to a Day.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
  /foods:
    get:
      tags:
        - Foods
      summary: Returns a list of all Foods
      responses:
        '200':
          description: A JSON Array of Foods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Food'
    post:
      tags:
        - Foods
      summary: Create a new Food.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                name:
                  type: string
                calories:
                  type: integer
                carbohydrates:
                  type: integer
                protein:
                  type: integer
                fat:
                  type: integer
      responses:
        '201':
          description: Created.
        '400':
          description: Bad Request.
  /foods/{foodId}:
    get:
      tags:
        - Foods
      summary: Get a food by ID
      parameters:
        - in: path
          name: foodId
          schema:
            type: integer
          required: true
          description: Numeric ID of the food to get.
      responses:
        200:
          description: A food object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Food'
        400:
          description: The specified food ID is invalid or not a number.
        404:
          description: A food with the specified ID was not found.
    delete:
      tags:
        - Foods
      summary: Delete a food
      parameters:
        - in: path
          name: foodId
          schema:
            type: integer
          required: true
          description: Numeric ID of the food to delete.
      responses:
        200:
          description: Food successfully deleted.
        404:
          description: Food could not be found.
  /foods/{foodId}/{mealId}:
    patch:
      tags:
        - Foods
      summary: Add a Food to a Meal.
      parameters:
        - in: path
          name: foodId
          schema:
            type: integer
          required: true
          description: Numeric ID for a Food.
        - in: path
          name: mealId
          schema:
            type: integer
          required: true
          description: Numeric ID for a Meal.
      responses:
        '200':
          description: Food successfully added to Meal.
  /medications:
    get:
      tags:
        - Medications
      summary: Retrieve all Medications.
      responses:
        '200':
          description: A list of Medications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
    post:
      tags:
        - Medications
      summary: Create a new Medication.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                day_id:
                  type: integer
                name:
                  type: string
                  example: Prednisone
                quantity:
                  type: integer
                strength:
                  type: integer
                dosage_unit:
                  type: string
                  example: 'mg'
      responses:
        201:
          description: Medication successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
  /medications/:medication_id:
    get:
      tags:
        - Medications
      summary: Retrieve a Medication by it's Numeric ID.
      parameters:
        - in: path
          name: medication_id
          schema:
            type: integer
          required: true
          description: Numeric ID that uniquely identifies a Medication.
      responses:
        200:
          description: The Medication retrieved via the given medication_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
  /medications/:medication_id/day:
    patch:
      tags:
        - Medications
      description: Add a medication to a Day.
      parameters:
        - in: path
          name: medication_id
          schema:
            type: integer
          required: true
          description: The Numeric ID that uniquely identifies a Medication.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                day_id:
                  type: integer
      responses:
        200:
          description: Success.
  /days:
    get:
      tags:
        - days
      summary: Retrieve all DailyLogs.
      responses:
        '200':
          description: A list of DailyLogs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Day'
    post:
      tags:
        - days
      summary: Create a new Day.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: 2022-07-05
      responses:
        '201':
          description: Successfully created a new Day.
  /day/{dayId}/meals:
    get:
      tags:
        - days
      summary: Retrieve the meals for a day
      parameters:
        - in: path
          name: dayId
          schema:
            type: integer
          description: Numeric ID for a Day object.
          required: true
      responses:
        200:
          description: A list of Meals associated with a Day.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
components:
  schemas:
    Food:
      type: object
      properties:
        id:
          type: integer
        meal_id:
          type: integer
        name:
          type: string
        calories:
          type: integer
          example: 280
        carbohydrates:
          type: integer
          example: 16
        protein:
          type: integer
          example: 14
        fat:
          type: integer
          example: 32
    Meal:
      type: object
      properties:
        id:
          type: integer
        timestamp:
          type: string
          format: date-time
          example: 2022-07-05T13:12:40Z
    Medication:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: Prednisone
        quantity:
          type: integer
          example: 1
        strength:
          type: integer
          example: 20
        dosage_unit:
          type: string
          example: mg
    Day:
      type: object
      properties:
        id:
          type: integer
        meals:
          type: array
          items:
            $ref: '#/components/schemas/Meal'
        date:
          type: string
          format: date
          example: 2022-07-05